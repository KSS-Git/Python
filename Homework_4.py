"""# Задача №1
# Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной
# платы сотрудника. В расчете необходимо использовать формулу: (выработка в часах*ставка в
# час) + премия. Для выполнения расчета для конкретных значений необходимо запускать
# скрипт с параметрами.

from sys import argv

script_name, my_hours, my_rate, my_bonus = argv
# параметры вводил с консоли pycharm

print('Имя скрипта: ', script_name)
print('Количество часов: ', my_hours)
print('Ставка оклада: ', my_rate)
print('Премия: ', my_bonus)


def my_salary():
    return int(my_hours) * int(my_rate) + int(my_bonus)


print('Заработная плата: ', my_salary())"""

"""# Задача №2
# Представлен список чисел. Необходимо вывести элементы исходного списка, значения
# которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. Для
# формирования списка использовать генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].

source_list_2 = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
res_list_2 = []
for el in range(1, len(source_list_2)):
    if source_list_2[el] > source_list_2[el-1]:
        res_list_2.append(source_list_2[el])

print(res_list_2)
# С генератором не получилось, подумаю ещё, как выражение составить"""

"""# Задача №3
# Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. Необходимо решить
# задание в одну строку.
# Подсказка: использовать функцию range() и генератор.

res_list = [el for el in range(20, 240) if el % 20 == 0 or el % 21 == 0]
print(res_list)
# вывод результата является второй строкой решения?  ))"""

"""# Задача №4
# Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать итоговый массив чисел, соответствующих требованию. Элементы вывести в
# порядке их следования в исходном списке. Для выполнения задания обязательно
# использовать генератор.
# Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
# Результат: [23, 1, 3, 10, 4, 11]


source_list_4 = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
res_list_4 = [i for i in source_list_4 if source_list_4.count(i) == 1]
print(res_list_4)"""

# Задача №5
# Реализовать формирование списка, используя функцию range() и возможности генератора. В
# список должны войти четные числа от 100 до 1000 (включая границы). Необходимо получить
# результат вычисления произведения всех элементов списка.
# Подсказка: использовать функцию reduce().


from functools import reduce


def my_func(num, next_num):
    return num * next_num


my_list_5 = [el for el in range(100, 1002, 2)]

print(reduce(my_func, my_list_5))

# Не успеваю ко времени сдачи задания.
# Сдаю 5 задач,  доделаю 6 и 7 и обновлю на GitHub
